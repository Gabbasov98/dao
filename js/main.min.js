$("._tab").click(function() {
    let parentBlock = $(this).parents("._tabs-parent")
    let tabId = $(this).attr("data-tab")
    $(parentBlock).find("._tab").removeClass("_active")
    $(this).addClass("_active")
    $(parentBlock).find(".tab-content").removeClass("_active")
    $(parentBlock).find(`.${tabId}`).addClass("_active")
})

$(".favourite-btn").click(function () {
    $(this).toggleClass("_added")
})

$(".tags__show").click(function () {
    $(this).parents(".tags").toggleClass("_open")
})

$(".header-search__show").click(function () {
    $(".header-search").toggleClass("_open")
})

$(document).mouseup( function(e){
    let div = $( ".header-search,.tags" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).hasClass("_open")){
            $(div).removeClass("_open")
        }
    }
});

function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)
        let isLoop = slider.classList.contains("_loop")
        let isWheel = slider.classList.contains("_wheel")

        if(isWheel){
            isWheel = {
                releaseOnEdges: isWheel,
            }
        }

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,
            mousewheel: isWheel,
            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

function gallery() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".gallery")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)
        let gallery = {
            mySwiper: {},
            mySwiper2: {}
        }

        gallery.mySwiper = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper`, {
            spaceBetween: 0,
            slidesPerView: "auto",
            freeMode: true,
            watchSlidesProgress: true,
            direction: "vertical",
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });
        gallery.mySwiper2 = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper2`, {
            spaceBetween: 0,
            direction: "vertical",
            loop: true,
            navigation: {
                nextEl: `.gallery[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.gallery[data-slider-id="${index}"] .swiper-button-prev`,
            },
            thumbs: {
                swiper:  gallery.mySwiper,
            },
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });

        SlidersArray[index] = gallery
    })

}

function dateFeedSlider() {
    var swiper = new Swiper('.date-feed .swiper-container', {
        slidesPerView: 27,
        slidesPerGroup: 27,
        spaceBetween: 0,
        allowTouchMove: false,
        navigation: {
            nextEl: '.date-feed .swiper-button-next',
            prevEl: '.date-feed .swiper-button-prev',
        },
        breakpoints: {
            100: {
                slidesPerView: "auto",
                slidesPerGroup: 1,
                allowTouchMove: true,
            },
            992: {
                slidesPerView: 27,
                slidesPerGroup: 27,
                allowTouchMove: false,
            },
        },
        on: {
            init: function () {
                if(window.innerWidth>992){
                    this.slideTo(this.slides.length-1,0)
                }
            },
        },
    })
}


Sliders()
gallery()
dateFeedSlider()

$(".city-select").click(function () {
    openModal("cityModal")
})

$(".cities__item").click(function () {
    $(".cities__item").removeClass("_active")
    $(this).addClass("_active")

    let cityName = $(this).find("span").html().trim()

    $(".city-select__current").html(cityName)
})

$("._toggle-date-filter").click(function () {
    $(".date-filter").toggleClass("_active")
})

$(document).mouseup( function(e){
    let div = $( ".date-filter" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).hasClass("_active")){
            $(div).removeClass("_active")
        }
    }
});

let fileInput = document.querySelector("[data-upload-id='file-input']")

if(fileInput){
    console.log(fileInput)
    const upload = new FileUploadWithPreview.FileUploadWithPreview('file-input');

    upload.options.multiple = true

    $(document).on('change', '.input-container input', function(e) {
        $(this).parents(".file-input").addClass("_uploaded")
    })

    $(document).on('click', '.image-preview-item-clear', function(e) {
        let count = $(this).parents(".file-input").find(".image-preview-item").length
        if(count === 1){
            $(this).parents(".file-input").removeClass("_uploaded")
        }
    })
}



let body = document.querySelector("body")
let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        openModal(modalId)
    }
})

function closeModals() {
    modals.forEach(modal => {
        modal.classList.remove("_active")
        body.classList.remove("fixed-body2")
    })
}

function openModal(modalId) {
    closeModals()
    let modal = document.querySelector(`#${modalId}`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();


window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        getScrollBarSize()
    })

    getScrollBarSize()

    let localeRu = {
        days: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],
        daysShort: ['Вос', 'Пон', 'Вто', 'Сре', 'Чет', 'Пят', 'Суб'],
        daysMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
        months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
        monthsShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
        today: 'Сегодня',
        clear: 'Очистить',
        dateFormat: 'dd.MM.yyyy',
        timeFormat: 'HH:mm',
        firstDay: 1
    };

    let dateInputs = document.querySelectorAll('.date-input input')
    dateInputs.forEach(el => {
        new AirDatepicker(el, {
            locale: localeRu,
            autoClose: true,
            inline: true,
            range: true,
            // selectedDates: [new Date()],
            onSelect: () => {
                $(".date-input").addClass("input-active")
            },
            buttons: [
                {
                    content: 'Сегодня',
                    attrs: {
                        class: 'datepicker-button'
                    },
                    onClick: (dp) => {
                        let today = new Date();
                        dp.selectDate(today);
                        dp.setViewDate(today);
                    }
                },
                {
                    content: 'Завтра',
                    attrs: {
                        class: 'datepicker-button'
                    },
                    onClick: (dp) => {
                        let tomorrow = new Date();
                        tomorrow.setDate(tomorrow.getDate() + 1);
                        dp.selectDate(tomorrow);
                        dp.setViewDate(tomorrow);
                    }
                },
                {
                    content: 'В выходные',
                    attrs: {
                        class: 'datepicker-button'
                    },
                    onClick: (dp) => {
                        let now = new Date();
                        let weekend = new Date();
                        let day = now.getDay();
                        let difference = day === 0 ? 0 : 7 - day; // Если сегодня воскресенье, выбираем его
                        weekend.setDate(now.getDate() + difference);
                        dp.selectDate(weekend);
                        dp.setViewDate(weekend);
                    }
                },
                {
                    content: 'Применить',
                    attrs: {
                        class: 'button-apply large'
                    },
                    onClick: (dp) => {
                        // Здесь ваша логика для кнопки "Применить"
                        console.log('Выбранная дата:', dp.selectedDates);
                    }
                }
            ],
        })
    })
})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
